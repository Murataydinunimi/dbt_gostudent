name: dbt CI/CD Pipeline

on:
  push:
    branches:
      - dev  # Trigger on pushes to the dev branch
  pull_request:
    branches:
      - dev  # Trigger on pull requests to the dev branch

jobs:
  dbt-test:
    runs-on: ubuntu-latest

    services:
      pgadmin:
        image: dpage/pgadmin4
        ports:
          - "8888:80"
        options: > 
          --env PGADMIN_DEFAULT_EMAIL=gostudentadmin@gostudent.com 
          --env PGADMIN_DEFAULT_PASSWORD=gostudent

      postgres:
        image: postgres:latest
        ports:
          - "5432:5432"
        options: > 
          --env POSTGRES_USER=postgres 
          --env POSTGRES_PASSWORD=postgres 
          --env POSTGRES_DB=gostudent
        volumes:
          - ./init:/docker-entrypoint-initdb.d

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'  

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install dbt-postgres==1.8.0 pandas==2.0.3 sqlalchemy==2.0.35 numpy==1.24.4

      - name: Run Initialization Script
        run: |
          echo "running initialization.."
          PGPASSWORD=postgres psql -h localhost -U postgres -c "CREATE DATABASE gostudent;"
          PGPASSWORD=postgres psql -h localhost -U postgres -d gostudent -f ./init/sql_commands.sql

      - name: Load Tables
        run: |
          echo "Loading tables..."
          python ./load_data.py
          
      - name: Run dbt debug
        run: dbt debug --profiles-dir ./gostudent_dbt
        working-directory: ./gostudent_dbt
        
      - name: Run dbt models
        run: dbt run --profiles-dir ./gostudent_dbt --target dev
        working-directory: ./gostudent_dbt
        
      - name: Run dbt tests
        run: dbt test --profiles-dir ./gostudent_dbt --target dev
        working-directory: ./gostudent_dbt
        
  merge-to-prod:
    needs: dbt-test
    if: success()  # Only run if previous job succeeded
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Merge dev to prod
        run: |
          git config --local user.email "barlaskiziltan@example.com"  
          git config --local user.name "murat"  
          git checkout prod
          git merge dev
          git push origin prod

  run-dbt-prod:
    needs: merge-to-prod
    if: success()  # Only run if previous job succeeded
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install dbt-postgres=1.8.0  

      - name: Run dbt in production schema
        run: dbt run --profiles-dir . --target prod
